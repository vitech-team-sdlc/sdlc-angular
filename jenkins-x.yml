buildPack: typescript
pipelineConfig:
  agent:
    image: nodejs12x
  env:
    - value: gcr.io
      name: DOCKER_REGISTRY
    - name: GIT_AUTHOR_EMAIL
      value: jenkins-x@googlegroups.com
    - name: GIT_AUTHOR_NAME
      value: jenkins-x-bot
    - name: GIT_COMMITTER_EMAIL
      value: jenkins-x@googlegroups.com
    - name: GIT_COMMITTER_NAME
      value: jenkins-x-bot
    - name: XDG_CONFIG_HOME
      value: /home/jenkins
    - name: CONV_COMMIT_ERR_FILE
      value: check.failed
    - name: CONV_COMMIT_FILE
      value: commit.check
  pipelines:
    pullRequest:
      preBuild:
        steps:
          - name: conventionalcommits-check
            image: aevea/commitsar:latest
            command: $(commitsar > $CONV_COMMIT_FILE) || { echo 'commit check failed' >> $CONV_COMMIT_ERR_FILE; exit 0; }
          - name: conventionalcommits-print
            command: cat $CONV_COMMIT_FILE
          - name: conventionalcommits-comment
            command: |
              if [ -f "$CONV_COMMIT_ERR_FILE" ]; then
                  jx step pr comment -c "$(echo -e "[Conventional Commits](https://www.conventionalcommits.org): **Check Failed** :cursing_face: \n HASH | ERROR | MSG \n --|--|-- \n $(cat  $CONV_COMMIT_FILE | grep "|" | awk  -F"|" '{printf "%s | %s | %s", $2, $3, $4;} {print ""}' | grep -v -e '^[[:space:]]*$' | tail -n +2 | grep '[[:alnum:]]')")"
                  exit 1;
              else
                 echo 'COMMIT MESSAGE CHECK PASSED!'
              fi
      postBuild:
        steps:
          - name: sonar-check-dir
            command: mkdir /workspace/source2
          - dir: /workspace/source2
            name: sonar-check
            steps:
              - name: git-clone
                command: git clone $SOURCE_URL /workspace/source2
              - name: get-pr-info
                image: 'gcr.io/jenkinsxio/jx-cli:3.0.232'
                command: jx gitops pr get --git-token=$GIT_TOKEN > pr.yaml
                env:
                  - name: GIT_TOKEN
                    valueFrom:
                      secretKeyRef:
                        name: jx-pipeline-git-github-github
                        key: password
              - name: save-source-branch
                image: mikefarah/yq
                command: yq r pr.yaml Source > target.branch && rm pr.yaml
              - name: swith-branch
                command: git status && git fetch && git checkout $(cat target.branch)
              - name: sonar
                image: sonarsource/sonar-scanner-cli:4.4
                command: cat sonar-project.properties && sonar-scanner
                args:
                  - "-Dsonar.host.url=${SONAR_HOST}"
                  - "-Dsonar.login=${SONAR_TOKEN}"
                  - "-Dsonar.pullrequest.branch=$(cat target.branch)"
                  - "-Dsonar.pullrequest.base=${PULL_BASE_REF}"
                  - "-Dsonar.pullrequest.key=${PULL_NUMBER}"
                  - "-Dsonar.pullrequest.github.repository=${REPO_OWNER}/${REPO_NAME}"
                  - "-Dsonar.projectKey=${REPO_OWNER}:${REPO_NAME}"
                  - "-Dsonar.organization=${SONAR_ORG}"
                  - "-Dsonar.projectName=${REPO_NAME}"
                  - "-Dsonar.scm.provider=${SONAR_SCM}"
                env:
                  - name: SONAR_TOKEN
                    valueFrom:
                      secretKeyRef:
                        name: sonar
                        key: sonar.login
                  - name: SONAR_ORG
                    valueFrom:
                      secretKeyRef:
                        name: sonar
                        key: sonar.organization
                  - name: SONAR_HOST
                    valueFrom:
                      secretKeyRef:
                        name: sonar
                        key: sonar.host.url
                  - name: SONAR_SCM
                    valueFrom:
                      secretKeyRef:
                        name: sonar
                        key: sonar.scm.provider
    overrides:
      - pipeline: pullRequest
        name: npm-install
        steps:
          - sh: npm install
            name: npm-install
          - sh: npm run build-prod
            name: npm-build
          - sh: npm run lint
            name: npm-lint
      - pipeline: release
        name: npm-install
        steps:
          - sh: npm install
            name: npm-install
          - sh: npm run build-prod
            name: npm-build
      - stage: setVersion
        name: next-version
        steps:
          - name: next-version
            command: jx step next-version --semantic-release --filename package.json
