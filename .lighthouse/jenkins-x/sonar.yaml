apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  labels:
    jenkins.io/pipelineType: build
    owner: vitech-team
  name: jenkins-x-sonar
spec:
  pipelineSpec:
    params:
      - description: the unique build number
        name: BUILD_ID
        type: string
      - description: the name of the job which is the trigger context name
        name: JOB_NAME
        type: string
      - description: the specification of the job
        name: JOB_SPEC
        type: string
      - description: 'the kind of job: postsubmit or presubmit'
        name: JOB_TYPE
        type: string
      - default: master
        description: the base git reference of the pull request
        name: PULL_BASE_REF
        type: string
      - description: the git sha of the base of the pull request
        name: PULL_BASE_SHA
        type: string
      - default: ""
        description: git pull request number
        name: PULL_NUMBER
        type: string
      - default: ""
        description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
        name: PULL_PULL_REF
        type: string
      - default: master
        description: git revision to checkout (branch, tag, sha, ref…)
        name: PULL_PULL_SHA
        type: string
      - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
        name: PULL_REFS
        type: string
      - description: git repository name
        name: REPO_NAME
        type: string
      - description: git repository owner (user or organisation)
        name: REPO_OWNER
        type: string
      - description: git url to clone
        name: REPO_URL
        type: string
    tasks:
      - name: from-build-pack
        params:
          - name: BUILD_ID
            value: $(params.BUILD_ID)
          - name: JOB_NAME
            value: $(params.JOB_NAME)
          - name: JOB_SPEC
            value: $(params.JOB_SPEC)
          - name: JOB_TYPE
            value: $(params.JOB_TYPE)
          - name: PULL_BASE_REF
            value: $(params.PULL_BASE_REF)
          - name: PULL_BASE_SHA
            value: $(params.PULL_BASE_SHA)
          - name: PULL_NUMBER
            value: $(params.PULL_NUMBER)
          - name: PULL_PULL_REF
            value: $(params.PULL_PULL_REF)
          - name: PULL_PULL_SHA
            value: $(params.PULL_PULL_SHA)
          - name: PULL_REFS
            value: $(params.PULL_REFS)
          - name: REPO_NAME
            value: $(params.REPO_NAME)
          - name: REPO_OWNER
            value: $(params.REPO_OWNER)
          - name: REPO_URL
            value: $(params.REPO_URL)
        taskSpec:
          params:
            - description: git url to clone
              name: REPO_URL
              type: string
            - default: master
              description: git revision to checkout (branch, tag, sha, ref…)
              name: PULL_PULL_SHA
              type: string
            - default: source
              description: subdirectory inside of /workspace to clone the git repo
              name: subdirectory
              type: string
            - description: the unique build number
              name: BUILD_ID
              type: string
            - description: the name of the job which is the trigger context name
              name: JOB_NAME
              type: string
            - description: the specification of the job
              name: JOB_SPEC
              type: string
            - description: 'the kind of job: postsubmit or presubmit'
              name: JOB_TYPE
              type: string
            - default: master
              description: the base git reference of the pull request
              name: PULL_BASE_REF
              type: string
            - description: the git sha of the base of the pull request
              name: PULL_BASE_SHA
              type: string
            - default: ""
              description: git pull request number
              name: PULL_NUMBER
              type: string
            - default: ""
              description: git pull request ref in the form 'refs/pull/$PULL_NUMBER/head'
              name: PULL_PULL_REF
              type: string
            - description: git pull reference strings of base and latest in the form 'master:$PULL_BASE_SHA,$PULL_NUMBER:$PULL_PULL_SHA:refs/pull/$PULL_NUMBER/head'
              name: PULL_REFS
              type: string
            - description: git repository name
              name: REPO_NAME
              type: string
            - description: git repository owner (user or organisation)
              name: REPO_OWNER
              type: string
          stepTemplate:
            env:
              - name: BUILD_ID
                value: $(params.BUILD_ID)
              - name: JOB_NAME
                value: $(params.JOB_NAME)
              - name: JOB_SPEC
                value: $(params.JOB_SPEC)
              - name: JOB_TYPE
                value: $(params.JOB_TYPE)
              - name: PULL_BASE_REF
                value: $(params.PULL_BASE_REF)
              - name: PULL_BASE_SHA
                value: $(params.PULL_BASE_SHA)
              - name: PULL_NUMBER
                value: $(params.PULL_NUMBER)
              - name: PULL_PULL_REF
                value: $(params.PULL_PULL_REF)
              - name: PULL_PULL_SHA
                value: $(params.PULL_PULL_SHA)
              - name: PULL_REFS
                value: $(params.PULL_REFS)
              - name: REPO_NAME
                value: $(params.REPO_NAME)
              - name: REPO_OWNER
                value: $(params.REPO_OWNER)
              - name: REPO_URL
                value: $(params.REPO_URL)
            name: ""
            resources:
              requests:
                cpu: 500m
                memory: 512Mi
            volumeMounts:
              - mountPath: /home/jenkins
                name: workspace-volume
              - mountPath: /home/jenkins/.gnupg
                name: volume-0
              - mountPath: /etc/podinfo
                name: podinfo
                readOnly: true
            workingDir: /workspace/source
          steps:
            - name: git-clone
              image: gcr.io/jenkinsxio/builder-jx:2.1.32-662
              workingDir: /workspace
              script: |
                mkdir -p $HOME
                git config --global credential.helper store
                git clone $(params.REPO_URL) $(params.subdirectory)
            - name: get-pr-info
              image: 'gcr.io/jenkinsxio/jx-cli:3.0.232'
              script: |
                jx gitops pr get --git-token=$GIT_TOKEN --pr=$(params.PULL_NUMBER) > pr.yaml
              env:
                - name: GIT_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: jx-pipeline-git-github-github
                      key: password
            - name: save-source-branch
              image: mikefarah/yq
              script: yq r pr.yaml Source > target.branch && rm pr.yaml
            - name: swith-to-pr-branch
              image: gcr.io/jenkinsxio/jx-cli:latest
              script: git checkout $(cat target.branch)
            - name: pre-sonar-npm-install
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              script: npm install
            - name: pre-sonar-npm-test
              image: gcr.io/jenkinsxio/builder-nodejs:2.1.150-769
              script: npm run test
            - name: sonar
              image: sonarsource/sonar-scanner-cli:4.4
              script: |
                cat sonar-project.properties && sonar-scanner \
                 -Dsonar.host.url=${SONAR_HOST} \
                 -Dsonar.login=${SONAR_TOKEN} \
                 -Dsonar.pullrequest.branch=$(cat target.branch) \
                 -Dsonar.pullrequest.base=${PULL_BASE_REF} \
                 -Dsonar.pullrequest.key=${PULL_NUMBER} \
                 -Dsonar.pullrequest.github.repository=${REPO_OWNER}/${REPO_NAME} \
                 -Dsonar.projectKey=${REPO_OWNER}:${REPO_NAME} \
                 -Dsonar.organization=${SONAR_ORG} \
                 -Dsonar.projectName=${REPO_NAME} \
                 -Dsonar.scm.provider=${SONAR_SCM}
              env:
                - name: SONAR_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: sonar
                      key: sonar-login
                - name: SONAR_ORG
                  valueFrom:
                    secretKeyRef:
                      name: sonar
                      key: sonar-organization
                - name: SONAR_HOST
                  valueFrom:
                    secretKeyRef:
                      name: sonar
                      key: sonar-host-url
                - name: SONAR_SCM
                  valueFrom:
                    secretKeyRef:
                      name: sonar
                      key: sonar-scm-provider
          volumes:
            - name: volume-0
              secret:
                secretName: jenkins-release-gpg
            - emptyDir: { }
              name: workspace-volume
            - downwardAPI:
                items:
                  - fieldRef:
                      fieldPath: metadata.labels
                    path: labels
              name: podinfo
  podTemplate:
    ImagePullSecrets: null
    hostNetwork: false
    schedulerName: ""
  serviceAccountName: tekton-bot
  timeout: 30m
